#!/usr/bin/env ruby
$stdout.sync = true

require "shellwords"
require "yaml"
require 'bundler'

def local_engines
  Bundler.load.specs.select do |g|
    g.name.start_with? 'jquest' and g.metadata['season']
  end
end

ENV["RAILS_ENV"] ||= "development"
RAILS_ENV   = ENV["RAILS_ENV"]

ENV["NODE_ENV"] ||= RAILS_ENV
NODE_ENV    = ENV["NODE_ENV"]

APP_PATH    = File.expand_path("../", __dir__)
CONFIG_PATH = File.join(APP_PATH, "config/webpacker.yml")

begin
  config              = YAML.load(File.read(CONFIG_PATH))[NODE_ENV]

  NODE_MODULES_PATH   = File.join(APP_PATH.shellescape, config["paths"]["node_modules_path"])
  WEBPACK_CONFIG_PATH = File.join(APP_PATH.shellescape, config["paths"]["config_path"])

  if NODE_ENV == "development" && config["dev_server"]["enabled"]
    puts "Warning: webpack-dev-server is currently enabled in #{CONFIG_PATH}. " \
      "Disable to serve assets directly from packs directory"
  end
rescue Errno::ENOENT, NoMethodError
  puts "config/webpacker.yml or [paths, dev_server] config not found."
  puts "Please run bundle exec rails webpacker:install to install webpacker"
  exit!
end

WEBPACK_BIN  = "#{NODE_MODULES_PATH}/.bin/webpack"
WEBPACK_CONFIG = "#{WEBPACK_CONFIG_PATH}/#{NODE_ENV}.js"
WEBPACK_ENTRY_DIRS = [APP_PATH]

# Get every engine
local_engines.each do |engine|
  # Add them as entry dir
  WEBPACK_ENTRY_DIRS << engine.full_gem_path
end

if __FILE__ == $0
  Dir.chdir(APP_PATH) do
    exec "NODE_PATH=#{NODE_MODULES_PATH} #{WEBPACK_BIN} " \
      "--config #{WEBPACK_CONFIG} " \
      "--env.entries=#{WEBPACK_ENTRY_DIRS * ','} #{ARGV.join(' ')}"
  end
end
